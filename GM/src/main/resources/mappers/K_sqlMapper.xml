<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.spring.gm.persistence.K_DAO" >

	<select id="memberInfo" parameterType="String" resultType="com.spring.gm.vo.MemberVO">
		SELECT * FROM member WHERE id = #{id}
	</select>

	<select id="findCompany" resultType="com.spring.gm.vo.CompaniesVO">
		SELECT * FROM companies WHERE del = 0 AND company != 0
	</select>
	
	<select id="searchCompany" parameterType="String" resultType="com.spring.gm.vo.CompaniesVO">
		SELECT * FROM companies WHERE c_name like '%'||#{keyword}||'%'
	</select>

	<insert id="registAccount" parameterType="com.spring.gm.vo.MemberVO">
		INSERT INTO member (id, pwd, name, eng_name, jumin1, jumin2, gender, marry, wdday, frgn, nation, tel, tel_hm, email_in, address, eng_address, depart, enterday, year, sys_rank, del, company, wrkdvd, rank)
		VALUES (#{id}, #{pwd}, #{name}, #{eng_name}, #{jumin1}, #{jumin2}, 
		#{gender}, #{marry}, #{wdday, jdbcType=DATE}, #{frgn}, #{nation, jdbcType=VARCHAR}, #{tel}, #{tel_hm, jdbcType=VARCHAR}, 
		#{email_in}, #{address}, #{eng_address, jdbcType=VARCHAR}, #{depart}, #{enterday}, 
		#{year}, #{sys_rank}, #{del}, #{company}, 1, #{rank})
	</insert>
	
	<insert id="registUsers" parameterType="java.util.Map">
		INSERT INTO users (username, password, enabled)
		VALUES (#{id}, #{pwd}, 0)
	</insert>
	
	<insert id="registAuthorities" parameterType="java.util.Map">
		INSERT INTO authorities (username, authority)
		VALUES (#{id}, #{auth})
	</insert>

	<select id="getWait" parameterType="int" resultType="com.spring.gm.vo.MemberVO">
		SELECT * FROM member WHERE depart=#{company} AND sys_rank = 0 
	</select>
	
	<select id="getCompany" parameterType="int" resultType="int">
		SELECT company FROM groups WHERE groupsId = #{depart}
	</select>
	
	<update id="updateSysrank" parameterType="java.util.Map">
		UPDATE member set sys_rank = #{rank} WHERE id = #{id}
	</update>
	
	<update id="updateAuthorities" parameterType="java.util.Map">
		UPDATE authorities set authority = #{auth} WHERE username = #{id}
	</update>
	
	<select id="getMembers" parameterType="int" resultType="com.spring.gm.vo.MemberVO">
		SELECT * FROM member WHERE company=#{company}
	</select>
	
	<select id="getAttendedSet" parameterType="int" resultType="com.spring.gm.vo.AttendedSetVO">
		SELECT * FROM attendedset WHERE company=#{company}
	</select>
	
	<select id="getDayoffList" parameterType="int" resultType="com.spring.gm.vo.DayoffVO">
		SELECT * FROM dayoff WHERE company=#{company} AND types = 1 ORDER BY year ASC
	</select>
	
	<select id="getHoliday" parameterType="int" resultType="int">
		SELECT day FROM dayoff WHERE company=#{company} AND types = 2
	</select>
	
	<update id="UpdateAttendedSet" parameterType="com.spring.gm.vo.AttendedSetVO">
		UPDATE attendedset SET 
			go=#{go}, off=#{off}, rest_start=#{rest_start}, rest_end=#{rest_end},
			over_start=#{over_start}, over_end=#{over_end}, night_start=#{night_start}, night_end=#{night_end},
			over_sal=#{over_sal}, night_sal=#{night_sal}
			WHERE company = #{company}
	</update>
	
	<update id="UpdateHoliday" parameterType="java.util.Map">
		UPDATE dayoff SET
			day = #{holiday}
			WHERE company=#{company} AND types = 2
	</update>
	
	<delete id="deleteDayOff" parameterType="int">
		DELETE FROM dayoff
			WHERE company=#{company} AND types = 1
	</delete>
	
	<insert id="insertDayoff" parameterType="java.util.Map">
		INSERT INTO dayoff
			VALUES(seq_dayoff.nextval, #{company}, #{year}, #{day}, 1)
	</insert>
	
	<select id="getGroups" resultType="com.spring.gm.vo.GroupsVO">
		SELECT * FROM groups WHERE company =#{company} AND group_rank = 1 AND del = 0
	</select>
	
	<select id="getGrade" resultType="com.spring.gm.vo.GradeVO">
		SELECT * FROM grade WHERE company =#{company}
	</select>
	
	<select id="getCompanyName" resultType="String">
		SELECT c_name FROM companies WHERE company =#{company}
	</select>
	
	<select id="getGroupInfo" parameterType="java.util.Map" resultType="com.spring.gm.vo.GroupInfoVO">
		SELECT * FROM groupinfo WHERE id=#{id} AND groupId=#{setDepart}
	</select>
	
	<delete id="deleteGroupInfo" parameterType="java.util.Map">
		DELETE FROM groupinfo WHERE groupId = #{setDepart} AND id = #{id}
	</delete>
	
	<insert id="insertGroupInfo" parameterType="java.util.Map">
		INSERT INTO groupinfo (groupId, id, rank_mem, del) 
			VALUES(#{depart}, #{id}, #{rank_mem}, 0)
	</insert>
	
	<update id="updateAdminMemberInfo" parameterType="java.util.Map">
		UPDATE member SET depart = #{depart}, rank = #{rank}, wrkdvd=#{wrkdvd},
		year=extract(year from sysdate)-extract(year from #{enterday}), enterday = #{enterday} WHERE id = #{id}
	</update>
	
	<update id="retireMember" parameterType="String">
		UPDATE member SET wrkdvd=3, del=1, retireday=sysdate
			WHERE id=#{id}
	</update>
	
	<update id="retireUsers" parameterType="String">
		UPDATE users SET enabled = '0'
			WHERE username=#{id}
	</update>
	
	<!-- 검색부분 -->
	<select id="selectCnt" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) as cnt FROM member where company = #{company} and del=#{retire} and sys_rank != 0
	</select>
	
	<!-- 급여 회원정보 가져오기(부서번호가 회사명) -->
	<select id="selectList2" parameterType="java.util.Map" resultType="com.spring.gm.vo.join_mgcVO2">
	<![CDATA[
		SELECT * FROM(SELECT m.id, m.name, m.rank, r.r_name, m.depart, m.enterday, m.tel, m.email_in, c.c_name as j_name, rownum rNum
              FROM member m ,companies c, grade r
              WHERE m.depart = c.company and m.rank = r.rank 
              and m.del = #{retire}
              and m.sys_rank != 0
              and m.company = #{company})
        WHERE (rNum >=  #{start} AND rNum <= #{end}) and depart = #{company}
	]]>
	</select>
	<!-- 급여 회원정보 가져오기(부서번호가 부서명) -->
	<select id="selectList3" parameterType="java.util.Map" resultType="com.spring.gm.vo.join_mgcVO2">
	<![CDATA[
		SELECT * FROM(SELECT m.id, m.name, m.rank, r.r_name, m.depart, m.enterday, m.tel, m.email_in, g.g_name as j_name, rownum rNum
              FROM member m ,groups g, grade r
              WHERE m.depart = g.groupid and m.rank = r.rank 
              and m.del = #{retire}
              and m.sys_rank != 0
              and m.company = #{company})
        WHERE (rNum >=  #{start} AND rNum <= #{end}) and depart != #{company}
	]]>
	</select>
	
	<!-- 검색 급여 회원정보 가져오기(성명) -->
	<select id="search_salaryCnt" parameterType="java.util.Map" resultType="int">
		SELECT count(*) cnt FROM member WHERE name like '%'||#{search_content}||'%' and company = #{company} and del = #{retire} and sys_rank != 0
	</select>
	<!-- 검색 급여 회원정보 가져오기(부서) -->
	<select id="search_salaryCnt2" parameterType="java.util.Map" resultType="int">
		SELECT count(*) cnt FROM member WHERE depart like '%'||#{search_content}||'%' and company = #{company} and del = #{retire} and sys_rank != 0
	</select>
	<!-- 검색 급여 회원정보 가져오기(사원 아이디) -->
	<select id="search_salaryCnt3" parameterType="java.util.Map" resultType="int">
		SELECT count(*) cnt FROM member WHERE id like '%'||#{search_content}||'%' and company = #{company} and del = #{retire} and sys_rank != 0
	</select>
	
	<!-- 검색 급여 회원정보 가져오기(성명 - 그룹테이블과 조인) -->
	<select id="searchinfoList" parameterType="java.util.Map" resultType="com.spring.gm.vo.join_mgcVO2">
		select * from(SELECT m.id, m.name, m.rank, r.r_name, m.depart, m.enterday, m.tel, m.email_in, g.g_name as j_name
              FROM member m ,groups g, grade r
              WHERE m.depart = g.groupid and m.rank = r.rank 
              and m.del=#{retire} and m.sys_rank != 0)
     	where  depart != #{company} and name like '%'||#{search_content}||'%'
	</select>
	
	<!-- 검색 급여 회원정보 가져오기(부서) -->
	<select id="searchinfoList2" parameterType="java.util.Map" resultType="com.spring.gm.vo.join_mgcVO2">
		SELECT * FROM(SELECT m.id, m.name, m.rank, r.r_name, m.depart, m.enterday, m.tel, m.email_in, g.g_name as j_name
              FROM member m ,groups g, grade r
              WHERE m.depart = g.groupid and m.rank = r.rank  
              and g.g_name like '%'||#{search_content}||'%' and g.company = #{company} 
              and m.del=#{retire} and m.sys_rank != 0)
	</select>
	
	<!-- 검색 급여 회원정보 가져오기(성명 - 사업장테이블과 조인) -->
	<select id="searchinfoList3" parameterType="java.util.Map" resultType="com.spring.gm.vo.join_mgcVO2">
		SELECT * FROM(SELECT m.id, m.name, m.rank, r.r_name, m.depart, m.enterday, m.tel, m.email_in, c.c_name as j_name
              FROM member m ,companies c, grade r
              WHERE m.depart = c.company and m.rank = r.rank 
              and m.del=#{retire} and m.sys_rank != 0)
    	 where  depart = #{company} and name like '%'||#{search_content}||'%'
	</select>
	
	<!-- 검색 급여 회원정보 가져오기(사원 아이디 - 그룹테이블과 조인) -->
	<select id="searchinfoList4" parameterType="java.util.Map" resultType="com.spring.gm.vo.join_mgcVO2">
		select * from(SELECT m.id, m.name, m.rank, r.r_name, m.depart, m.enterday, m.tel, m.email_in, g.g_name as j_name
              FROM member m ,groups g, grade r 
              WHERE m.depart = g.groupid and m.rank = r.rank 
              and m.del=#{retire} and m.sys_rank != 0)
    	 where  depart != #{company} and id like '%'||#{search_content}||'%'
	</select>
	
	<!-- 검색 급여 회원정보 가져오기(성명 - 사업장테이블과 조인) -->
	<select id="searchinfoList5" parameterType="java.util.Map" resultType="com.spring.gm.vo.join_mgcVO2">
		SELECT * FROM(SELECT m.id, m.name, m.rank, r.r_name, m.depart, m.enterday, m.tel, m.email_in, c.c_name as j_name
              FROM member m ,companies c, grade r
              WHERE m.depart = c.company and m.rank = r.rank 
              and m.del=#{retire} and m.sys_rank != 0)
    	 where  depart = #{company} and id like '%'||#{search_content}||'%'
	</select>
	
	<select id="getMemberList" parameterType="java.util.Map" resultType="com.spring.gm.vo.MemberVO">
		<![CDATA[
			SELECT * FROM(
				SELECT m.*, rownum rNum FROM member m
				WHERE m.del = #{retire} AND m.company = #{company}
				)
			WHERE rNum >=  #{start} AND rNum <= #{end}
		]]>
	</select>
	
	<update id="updateRestoMember" parameterType="java.util.Map">
		UPDATE member SET rank = #{rank}, depart = #{depart}, del = 0, retireday = null
			WHERE id = #{id}
	</update>
	
	<update id="updateRestoUsers" parameterType="String">
		UPDATE users SET enabled = 1 WHERE username = #{id}
	</update>
	
	<select id="selectCnt_name" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(*) as cnt FROM member where company = #{company} and del=#{retire} and sys_rank != 0
			and name like '%'||#{name}||'%'
	</select>
	
	<select id="getMemberList_name" parameterType="java.util.Map" resultType="com.spring.gm.vo.MemberVO">
		<![CDATA[
			SELECT * FROM(
				SELECT m.*, rownum rNum FROM member m
				WHERE m.del = #{retire} AND m.company = #{company}
				AND name like '%'||#{name}||'%'
				)
			WHERE rNum >=  #{start} AND rNum <= #{end}
		]]>
	</select>
	
	<select id="getMgiList" parameterType="java.util.Map" resultType="com.spring.gm.vo.join_mgiVO">
		SELECT m.id, m.name, m.depart, g.g_name departName, m.rank, r.r_name rankName, m.tel, m.email_in email, f.rank_mem leader
		    FROM member m, groupinfo f, groups g, grade r
		    WHERE m.id = f.id
		    AND m.depart = f.groupid
		    AND m.depart = g.groupid
		    AND m.rank = r.rank
		    AND m.depart = #{depart}
		    AND m.company = #{company}
		    AND m.sys_rank != 0
		    AND m.del = 0
		    ORDER BY m.enterday ASC
	</select>
	
	<select id="getMgiList2" parameterType="int" resultType="com.spring.gm.vo.join_mgiVO">
		SELECT m.id, m.name, m.depart, m.rank, r.r_name rankName, m.tel, m.email_in email, m.sys_rank
		    FROM member m, grade r
		    WHERE m.rank = r.rank
		    AND m.company = #{company}
		    AND m.depart > 410000000
		    AND m.sys_rank != 0
		    AND m.del = 0
		    ORDER BY m.enterday ASC
	</select>
	
	<insert id="createDepart" parameterType="java.util.Map">
		INSERT INTO groups VALUES(seq_groups.nextval, #{company}, #{departName}, 1, 0)
	</insert>
	
	<select id="getDepartName" parameterType="int" resultType="String">
		SELECT g_name FROM groups WHERE groupId=#{depart}
	</select>
	
	<update id="updateDepartName" parameterType="java.util.Map">
		UPDATE groups SET g_name = #{dname} WHERE groupId = #{depart}
	</update>
	
	<select id="countDepartMember" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM member WHERE depart = #{depart} AND del = 0
	</select>
	
	<update id="deleteDepart" parameterType="int">
		UPDATE groups SET del = 1 WHERE groupId = #{depart}
	</update>
	
	<update id="changeleader1" parameterType="int">
		UPDATE groupinfo SET rank_mem = 0 WHERE groupId=#{depart}
	</update>
	
	<update id="changeleader2" parameterType="java.util.Map">
		UPDATE groupinfo SET rank_mem = 1 WHERE groupId=#{depart} AND id=#{id}
	</update>
	
	<select id="getGrades" parameterType="int" resultType="com.spring.gm.vo.Grade_visibleVO">
		SELECT * FROM grade WHERE company = #{company} and ranking != 0 ORDER BY ranking ASC
	</select>
	
	<select id="getGradeCnt" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM member WHERE rank=#{rank} AND del=0
	</select>
	
	<insert id="insertGrade" parameterType="com.spring.gm.vo.GradeVO">
		INSERT INTO grade VALUES (seq_rank.nextval, #{r_name}, #{company}, #{ranking})
	</insert>
	
	<update id="updateGrade" parameterType="com.spring.gm.vo.GradeVO">
		UPDATE grade SET r_name=#{r_name}, ranking=#{ranking}
			WHERE rank=#{rank} 
	</update>
	
	<delete id="deleteGrade" parameterType="int">
		DELETE FROM grade WHERE rank=#{rank}
	</delete>
	
	<select id="getMgiList3" parameterType="int" resultType="com.spring.gm.vo.join_mgiVO">
		SELECT m.id, m.name, m.depart, g.g_name departName, m.rank, r.r_name rankName, m.tel, m.email_in email, f.rank_mem leader, m.sys_rank
		    FROM member m, groupinfo f, groups g, grade r
		    WHERE m.id = f.id
		    AND m.depart = f.groupid
		    AND m.depart = g.groupid
		    AND m.rank = r.rank
		    AND m.company = #{company}
		    AND m.sys_rank != 0
		    AND m.del = 0
		    ORDER BY m.enterday ASC
	</select>
	
	<update id="insertManager" parameterType="String">
		UPDATE member SET sys_rank=1 WHERE id=#{id}
	</update>
	
	<insert id="insertManager2" parameterType="String">
		INSERT INTO authorities VALUES(#{id}, 'USER_ADMIN')
	</insert>
	
	<update id="deleteManager" parameterType="String">
		UPDATE member SET sys_rank=2 WHERE id=#{id}
	</update>
	
	<delete id="deleteManager2" parameterType="String">
		DELETE FROM authorities WHERE username=#{id} AND authority='USER_ADMIN'
	</delete>	
	
	<select id="getAppHoliday" parameterType="int" resultType="com.spring.gm.vo.join_mvrVO">
		select v.*, m.name, r.r_name from vacation v, grade r, member m
		    where v.id = m.id
		    and m.rank = r.rank
		    and v.state = 2
		    and m.company = #{company}
		    and m.del = 0
	</select>
	
	<update id="handleHoliday" parameterType="java.util.Map">
		UPDATE vacation SET state = #{state} WHERE num = #{num}
	</update>
	
	<select id="getComList" resultType="com.spring.gm.vo.CompaniesVO">
		SELECT * FROM companies WHERE company != 0
	</select>
	
	<select id="getSearchComList" resultType="com.spring.gm.vo.CompaniesVO">
		SELECT * FROM companies WHERE company != 0
			AND c_name like '%'||#{search}||'%'
	</select>
	
	<select id="getAdminList" resultType="com.spring.gm.vo.MemberVO">
		SELECT * FROM member WHERE del = 0
			AND company = #{company} AND sys_rank = 1
	</select>
	
	<select id="getAppComList" resultType="com.spring.gm.vo.CompaniesMemberVO">
		SELECT c.*, m.id, m.name FROM companies c, member m 
    		WHERE m.company=c.company AND c.del > 1 AND sys_rank = 1
	</select>
	
	<update id="handlecompany" parameterType="java.util.Map">
		UPDATE companies SET del = #{del} WHERE company =#{company}
	</update>
	
	<select id="getComInfoId" resultType="String">
		SELECT id FROM member WHERE company = #{company} AND sys_rank = 1;
	</select>
	
	<select id="getNoticeCnt" resultType="int">
		SELECT COUNT(*) FROM boardlist WHERE num = 10 AND del = 0
	</select>
	
	<select id="getNoticeList" resultType="com.spring.gm.vo.BoardListVO">
		<![CDATA[
			SELECT * FROM(
				SELECT m.*, rownum rNum FROM boardlist m
				WHERE m.del = 0 AND m.num = 10
				ORDER BY reg_date DESC
				)
			WHERE rNum >=  #{start} AND rNum <= #{end}
		]]>
	</select>
	
	<insert id="insertNotice" parameterType="java.util.Map">
		INSERT INTO boardlist VALUES(boardlist_seq.nextval, 10, '시스템 관리자', #{subject}, #{content}, 0,0,0,0,sysdate,0,0,0)
	</insert>
	
	<update id="addNoticeReadCnt" parameterType="int">
		UPDATE boardlist SET readcnt = readcnt+1 WHERE boardnum = #{num}
	</update>
	
	<select id="getNoticeContent" resultType="com.spring.gm.vo.BoardListVO">
		SELECT * FROM boardlist WHERE boardnum = #{num}
	</select>
	
	<update id="updateNotice" parameterType="java.util.Map">
		UPDATE boardlist SET subject=#{subject}, content=#{content} WHERE boardnum=#{boardnum}
	</update>
	
	<update id="deleteNotice" parameterType="int">
		UPDATE boardlist SET del=1 WHERE boardnum=#{num}
	</update>
	
	<select id="getName" resultType="String">
		SELECT name FROM member WHERE id=#{id}
	</select>
	
	<insert id="sendMessage_pro" parameterType="java.util.Map">
		INSERT INTO message VALUES(seq_message.nextval, 1, 'master', #{id}, #{subject}, #{content}, 0, sysdate, sysdate, 0, 0)
	</insert>
	
	<select id="getMainNotice" resultType="com.spring.gm.vo.BoardListVO">
		select * from boardList 
			WHERE boardnum = (SELECT MAX(boardnum) FROM boardlist WHERE del = 0 AND num=10)
	</select>
	
	<insert id="insertCompany" parameterType="java.util.Map">
		INSERT INTO companies VALUES(seq_companies.nextval, #{c_name}, #{c_address}, #{c_number}, 2)
	</insert>
	
	<select id="getnewCompany" resultType="int">
		SELECT seq_companies.currval FROM dual
	</select>
	
	<insert id="createfav" parameterType="java.util.Map">
		INSERT INTO groups VALUES(seq_groups.nextval, #{company}, #{departName}, 3, 0)
	</insert>
	
	<insert id="favInfo" parameterType="java.util.Map">
		INSERT INTO groupinfo values(seq_groups.currval, #{departName}, 1, 0)
	</insert>
	
	<select id="getCompanyNum" resultType="int">
		SELECT company FROM member WHERE id=#{id}
	</select>
	
	<insert id="insertAttendedSet" parameterType="int">
		INSERT INTO attendedset VALUES(seq_attendedset.nextval, #{company},
			32400, 64800, 43200, 46800, 64800, 79200, 79200, 21600, 10000, 15000 )
	</insert>
	
	<insert id="insertBasicBoard" parameterType="int">
		INSERT INTO boards VALUES(boards_seq.nextval, #{company},
			'사내게시판', 0, 0 )
	</insert>
	
	<insert id="insertBasicDayoff" parameterType="java.util.Map">
		INSERT INTO dayoff
			VALUES(seq_dayoff.nextval, #{company}, #{year}, #{day}, #{types})
	</insert>
	
	<insert id="insertBasicGrade" parameterType="java.util.Map">
		INSERT INTO grade VALUES (seq_rank.nextval, #{r_name}, #{company}, #{ranking})
	</insert>
	
	<insert id="insertBasicGrade2" parameterType="java.util.Map">
		INSERT INTO grade VALUES (#{company}, #{r_name}, #{company}, #{ranking})
	</insert>
	
	<update id="updateEmailAccount" parameterType="String">
		UPDATE users SET enabled=1 WHERE username=#{id}
	</update>
	
	<select id="findIds" resultType="com.spring.gm.vo.MemberVO" parameterType="java.util.Map">
		SELECT * FROM member WHERE email_in = #{email} AND name = #{name} AND del = 0
	</select>
	
	<select id="findPw" resultType="int" parameterType="java.util.Map">
		SELECT COUNT(*) FROM member WHERE email_in = #{email} AND name = #{name} AND id = #{id} AND del = 0
	</select>
	
	<select id="getEmail" resultType="String">
		SELECT email_in FROM member WHERE id = #{id}
	</select>
	
	<update id="updatePw" parameterType="java.util.Map">
		UPDATE member SET pwd = #{pwd} WHERE id = #{id}
	</update>
	
	<update id="updateUsers" parameterType="java.util.Map">
		UPDATE users SET password = #{pwd} WHERE username = #{id}
	</update>
	
	<select id="getAddressList" resultType="com.spring.gm.vo.AddressMemberMainVO">
		select a.strid, a.id, m.name, r.r_name, g.g_name from member m, addressmem a, grade r, groups g
		    where a.id = m.id
		    and m.rank = r.rank
		    and a.strid = #{strId}
		    and g.groupid(+) = m.depart
		    and m.del = 0
	</select>
</mapper>